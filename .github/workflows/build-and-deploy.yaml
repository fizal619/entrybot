# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Note: Restart will take about 10-20 minutes"
        required: true
        default: "master"
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.version }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - run: |
        sudo apt-get install qemu-user-static -y
        mkdir -p build/cache
        docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
        docker buildx build \
          --platform linux/arm/v7 \
          --progress plain \
          -t ${{ secrets.REGISTRY_USERNAME }}/entrybot:${{ github.sha }} \
          --push .
        docker images

    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig:  ${{ secrets.KUBECONFIG }}
      id: setcontext

    - uses: azure/setup-helm@v1
      with:
        version: 'v3.2.4' # default is latest stable
      id: install

    - run: |
        echo "============= SOPS n' GPG ============="
        sudo apt install -y gnupg2
        curl -LJ --output sops.deb https://github.com/mozilla/sops/releases/download/v3.6.0/sops_3.6.0_amd64.deb
        sudo apt install -y ./sops.deb
        echo "============= IMPORTING KEY ============="
        echo "${{ secrets.ENC_KEY }}" > private.key
        gpg --import private.key
        echo "============= HELMFILE ============="
        curl -LJ --output helmfile https://github.com/roboll/helmfile/releases/download/v0.125.0/helmfile_linux_amd64
        chmod +x helmfile
        echo "============= HELM PLUGINS ============="
        helm plugin install https://github.com/zendesk/helm-secrets
        helm plugin install https://github.com/databus23/helm-diff --version master
        echo "============= HELMFILE APPLY ============="
        ./helmfile sync
